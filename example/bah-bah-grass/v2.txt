function replantingGrass() {
    const x = shared_farmer.posX * gridSize;
    const y = shared_farmer.posY * gridSize;
    if ((me.sheep.posX == x && me.sheep.posY == y)) {
        shared_farmer.madeIt = true;
    }

    // works well once, not twice

    //if between 85-75
    if (shared_time.gameTimer <= 85 && shared_time.gameTimer > 75) {
        image(farmer, 400, 0, 50, 50);
        shared.grid[shared_farmer.posX][shared_farmer.posY] = "replanted";
        if(partyIsHost()) {
            if (frameCount % 60 === 0) {
                shared_farmer.farmerTimer--;
            }
        
            if (shared_farmer.farmerTimer === 0) {
                if (shared_farmer.madeIt === false) {
                    console.log("Didn't get seed in time")
                    for (i = 0; i < gridSize; i++) {
                        shared.grid[i][shared_farmer.posY] = "planted";
                    }
                }
            }
            
            if (shared_farmer.madeIt === true) {
                console.log("You got to seed in time!")
                shared.grid[shared_farmer.posX][shared_farmer.posY] = "unplanted";
            }
        }
        text(shared_farmer.farmerTimer, 425,70);
    } 
}



function replantingGrass() {
    const x = shared_farmer.posX * gridSize;
    const y = shared_farmer.posY * gridSize;
    
    // a little glitchy for the player that is not the host but for the most part works

    // if anyone gets to yellow spot:
    const p1 = guests.find((p) => p.role === "player1");
    const p2 = guests.find((p) => p.role === "player2");

    if ((shared_time.gameTimer <= 85 && shared_time.gameTimer > 75) ||
        (shared_time.gameTimer <= 65 && shared_time.gameTimer > 55)) {
        image(farmer, 400, 0, 50, 50);
        shared.grid[shared_farmer.posX][shared_farmer.posY] = "replanted";
        if(partyIsHost()) {
            if (frameCount % 60 === 0) {
                shared_farmer.farmerTimer--;
            }
        }
        if ((p1 === me) || (p2 === me)) { // if either player made it to the seed
            if ((me.sheep.posX === x && me.sheep.posY === y)) {
                shared_farmer.madeIt = true;
            }
        }

        if (shared_farmer.farmerTimer === 0) { //this works!
            if (shared_farmer.madeIt === false) {
                console.log("Didn't get seed in time")
                for (i = 0; i < gridSize; i++) {
                    shared.grid[i][shared_farmer.posY] = "planted";
                }
            }
        }
        
        if (shared_farmer.madeIt === true) {
            console.log("You got to seed in time!")
            shared.grid[shared_farmer.posX][shared_farmer.posY] = "unplanted";
        }

        text(shared_farmer.farmerTimer, 425,70);
    } else {
        partySetShared(shared_farmer, {
            farmerTimer : 10,
            posX: 6,
            posY: 18,
            madeIt: false
        });
    }
}


function drawSheep() {
    //draw sheep for player 1
    const p1 = guests.find((p) => p.role === "player1");
    if (p1) {
        image(
            sheep,
            p1.sheep.posX - 8,
            p1.sheep.posY - 10,
            gridSize + 15,
            gridSize + 15
        );
    }
    //draw sheep for player 2
    const p2 = guests.find((p) => p.role === "player2");
    if (p2) {
        image(
            black_sheep,
            p2.sheep.posX - 8,
            p2.sheep.posY - 10,
            gridSize + 15,
            gridSize + 15
        );
    }
}